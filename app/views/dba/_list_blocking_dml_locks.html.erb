<%

@update_area = get_unique_area_id

# Generische Funktion fÃ¼r Link
def link_column_blocking_reason_cascade(rec, value)
    ajax_link(value,
                {:action       => "list_blocking_reason_cascade",
                 :update_area  => @update_area,
                 :snapshotts   => localeDateTime(rec.snapshotts),
                 :instance     => rec.instance_number,
                 :sid          => rec.sid,
                 :serial_no     => rec.serial_no
                },
         :title => t(:dba_list_blocking_dml_locks_link_cascade_hint, :default=>'List complete hierarchy of blockers for this session') )
end

def show_blocking_object(rec)
  output = link_object_description(@update_area, rec.blocking_object_schema, rec.blocking_object_name)
  output << " (#{rec.blocking_subobject_name})" if rec.blocking_subobject_name
  output << " - "
  output << link_column_blocking_object(rec)
  output
end

def link_column_blocking_object(rec)
    ajax_link("Row_Wait_File#=#{rec.row_wait_file_no}, Row_Wait_Block#=#{rec.row_wait_block_no}, Row_Wait_Row#=#{rec.row_wait_row_no}", {
                          :action           => :convert_to_rowid,
                          :update_area      => "lockdetail_#{rec.row_num}",
                          :waitingforobject => "#{rec.blocking_object_schema}.#{rec.blocking_object_name}",
                          :data_object_id   => rec.data_object_id,
                          :row_wait_file_no => rec.row_wait_file_no,
                          :row_wait_block_no => rec.row_wait_block_no,
                          :row_wait_row_no  => rec.row_wait_row_no
                         },
                  :title=>t(:dba_list_blocking_dml_locks_link_column_blocking_object_hint, :default=>"Determine associated rowid")
                )+"<div id=\"lockdetail_#{rec.row_num}\"></div>".html_safe
end

def link_column_session_info(instance, sid, serial_no)
  ajax_link("#{instance} : #{sid}", {
                          :action            => "show_session_detail",
                          :instance          => instance,
                          :sid               => sid,
                          :serial_no          => serial_no,
                          :update_area       => @update_area
                         },
                  :title => "#{t(:dba_list_blocking_dml_locks_link_sid_hint, :default=>'List detailed info for this session')}, Serial_No=#{serial_no}"
                 )
end

def link_column_id1id2(rec)
  ajax_link("#{rec.id1}, #{rec.id2}", {
                          :action            => :list_dml_locks,
                          :max_result_size   => 1000,
                          :id1               => rec.id1,
                          :id2               => rec.id2,
                          :update_area       => @update_area
                         },
                  :title => "Show all records from gv$Lock locking exactly this ID1/ID2\nThis list contains sessions holding locks on the object determined by ID1/ID2 and sessions requesting locks on this object"
                 )
end





column_options =
  [
    {:caption=>"Root Blocking Session", :data=>proc{|rec| link_column_session_info(rec.root_blocking_instance_number, rec.root_blocking_sid, rec.root_blocking_serial_no) }, :title=>t(:dba_list_blocking_dml_locks_root_blocking_session_hint, :default=>'Instance and SID of session triggering the lock-cascade'), :data_title=>proc{|rec| "%t, Serial_No=#{rec.root_blocking_serial_no}"} },
    {:caption=>"H",                     :data=>proc{|rec| rec.hlevel},                                              :title=>t(:dba_list_blocking_dml_locks_level_hint, :default=>'Depth of dependency-hierarchy beginning with root blocker (1 = root blocker itself)')},
    {:caption=>"Blocking Session",      :data=>proc{|rec| link_column_session_info(rec.blocking_instance_number, rec.blocking_sid, rec.blocking_serial_no)},           :title=>t(:dba_list_blocking_dml_locks_blocking_sid_hint, :default=>'Instance and SID of blocking session'),    :data_title=>proc{|rec| "%t, Serial_No=#{rec.blocking_serial_no}"}, :data_style=>proc{|rec| "background-color:orange;" if rec.root_blocking_instance_number==rec.blocking_instance_number && rec.root_blocking_sid==rec.blocking_sid}},
    {:caption=>"B. Status",             :data=>proc{|rec| rec.blocking_status },                                    :title=>t(:dba_list_blocking_dml_locks_blocking_status_hint, :default=>'Status of blocking session') },
    {:caption=>"B. Event",              :data=>proc{|rec| rec.blocking_event },                                     :title=>t(:dba_list_blocking_dml_locks_blocking_wait_event_hint, :default=>'Current wait event of blocking session') },
    {:caption=>"B. Client-Info / Module / Action",:data=>proc{|rec| "#{rec.blocking_client_info} #{rec.blocking_module} #{rec.blocking_action}"}, :title=>t(:dba_list_blocking_dml_locks_blocking_client_info_hint, :default=>'Client info, module and action of blocking session'),  :data_title=>proc{|rec| "%t, #{rec.blocking_app_desc}"} },
    {:caption=>"B. User",               :data=>proc{|rec| rec.blocking_username},                                   :title=>t(:dba_list_blocking_dml_locks_blocking_user_hint, :default=>'User of blocking session'),                                                          :data_title=>proc{|rec| "%t, Machine=#{rec.blocking_machine}, OSUser=#{rec.blocking_osuser}, Process=#{rec.blocking_process}"} },
    {:caption=>"B. Program",            :data=>proc{|rec| rec.blocking_program},                                    :title=>t(:dba_list_blocking_dml_locks_blocking_program_hint, :default=>'Program of blocking session'),                                                      :data_title=>proc{|rec| "%t, Machine=#{rec.blocking_machine}, OSUser=#{rec.blocking_osuser}, Process=#{rec.blocking_process}"} },
    {:caption=>"B. Wait Sec",           :data=>proc{|rec| fn(rec.blocking_seconds_waiting, 2)},                     :title=>t(:dba_list_blocking_dml_locks_blocking_waiting_seconds_hint, :default=>'Seconds in wait of blocking session'), data_title: proc{|rec| "%t\n#{seconds_explain(rec.blocking_seconds_waiting)}" }, :align=>"right"},
    {:caption=>"Blocking Object",       :data=>proc{|rec| show_blocking_object(rec) }, :title=>t(:dba_list_blocking_dml_locks_blocking_object_hint, :default=>'Schema and name of blocking object') },
    {:caption=>"Waiting Session",       :data=>proc{|rec| link_column_session_info(rec.inst_id, rec.sid, rec.serial_no)}, :title=>t(:dba_list_blocking_dml_locks_waiting_sid_hint, :default=>'Instance and SID of waiting session'),                                          :data_title=>proc{|rec| "%t, Serial_No=#{rec.serial_no}"} },
    {:caption=>"W. Status",             :data=>proc{|rec| rec.status },                                             :title=>t(:dba_list_blocking_dml_locks_waiting_status_hint, :default=>'Status of waiting session')},
    {:caption=>"W. Event",              :data=>proc{|rec| rec.event },                                              :title=>t(:dba_list_blocking_dml_locks_waiting_wait_event_hint, :default=>'Current wait event of waiting session'),                                                     :data_title=>proc{|rec| "%t: #{explain_wait_event(rec.event)}"} },
    {:caption=>"W. Client-Info / Module / Action", :data=>proc{|rec| "#{rec.client_info} #{rec.module} #{rec.action}"}, :title=>t(:dba_list_blocking_dml_locks_waiting_client_info_hint, :default=>'Client-info, module and action of waiting session'),                             :data_title=>proc{|rec| "%t, #{rec.waiting_app_desc}"} },
    {:caption=>"W. User",               :data=>proc{|rec| rec.username},                                            :title=>t(:dba_list_blocking_dml_locks_waiting_user_hint, :default=>'User of waiting session'),                                                           :data_title=>proc{|rec| "%t, Machine=#{rec.machine}, OSUser=#{rec.osuser}, Process=#{rec.process}"} },
    {:caption=>"W. Program",            :data=>proc{|rec| rec.program},                                             :title=>t(:dba_list_blocking_dml_locks_waiting_program_hint, :default=>'Program of waiting session'),                                                       :data_title=>proc{|rec| "%t, Machine=#{rec.machine}, OSUser=#{rec.osuser}, Process=#{rec.process}"} },
    {:caption=>"W. Wait Sec",           :data=>proc{|rec| fn(rec.seconds_waiting, 2)},                              :title=>t(:dba_list_blocking_dml_locks_waiting_seconds_hint, :default=>'Seconds in wait of waiting session'), data_title: proc{|rec| "%t\n#{seconds_explain(rec.seconds_waiting)}" }, :align=>"right"},
    {:caption=>"W. Objectname",         :data=>proc{|rec| rec.objectname},                                          :title=>t(:dba_list_blocking_dml_locks_waiting_object_hint, :default=>'Name of waiting object')},
    {:caption=>"LT",                    :data=>proc{|rec| rec.locktype},                                            :title=>t(:dba_list_blocking_dml_locks_waiting_locktype_hint, :default=>'Lock type of waiting session'),                                                       :data_title=>proc{|rec| "%t: #{lock_types(rec.locktype)}"} },
    {:caption=>"ID1, ID2",              :data=>proc{|rec| link_column_id1id2(rec)},                                 :title=>t(:dba_list_blocking_dml_locks_waiting_id1id2_hint, :default=>'ID2, ID2 of waiting object')},
    {:caption=>"R",                     :data=>proc{|rec| rec.request},                                             :title=>t(:dba_list_blocking_dml_locks_request_hint, :default=>'Lock mode requested by waiting session'),                                                              :data_title=>proc{|rec| "%t: #{lock_modes(rec.request)}"} },
    {:caption=>"L",                     :data=>proc{|rec| rec.lockmode},                                            :title=>t(:dba_list_blocking_dml_locks_hold_hint, :default=>'Lock mode hold by blocking session'),                                                                 :data_title=>proc{|rec| "%t: #{lock_modes(rec.lockmode)}"} },
    {:caption=>"W. SQL-ID",             :data=>proc{|rec| link_sql_id(@update_area, rec.inst_id, rec.sql_id, childno: rec.sql_child_number, parsing_schema_name: rec.username)}, :title=>t(:dba_list_blocking_dml_locks_sql_id_hint, :default=>'SQL-ID of current statement of waiting session')},
  ]
%>

<%= gen_slickgrid(@locks, column_options, {
        :caption => "Blocking DML-Locks from gv$Lock #{localeDateTime(Time.now)}",
        :max_height=>450,
        show_pin_icon: 1,
        update_area:   @update_area
})
%>

