<%
   @update_area = get_unique_area_id

   column_options = []
   column_options << {:caption=> 'Table Partition',     :data=>proc{|rec| rec.partition_name},          :title=> 'Name of table partition'}
   column_options << {:caption=> 'LOB Partition',       :data=>proc{|rec| rec.lob_partition_name},      :title=> 'Name of corresponding LOB partition'}
   column_options << {:caption=> 'LOB Index Partition', :data=>proc{|rec| rec.lob_indpart_name},        :title=> 'Name of corresponding LOB index partition'}
   column_options << {:caption=> 'Pos.',                :data=>proc{|rec| fn(rec.partition_position)},  :title=> 'Position of the LOB data partition within the LOB item', :align=>:right}
   column_options << {:caption=> 'Comp.',               :data=>proc{|rec| fn(rec.composite)},           :title=> 'Indicates whether the partition is composite (YES) or not (NO)'}

   column_options << {:caption=> 'Column',              :data=>proc{|rec| rec.column_name},             :title=> 'Column LOB belongs to'}
   column_options << {:caption=> 'Size (MB)',           :data=>proc{|rec| fn(rec.size_mb, 2)},          :title=> 'Size of LOB segment in MB', :align=>:right}
   column_options << {:caption=> 'Tablespace',          :data=>proc{|rec| rec.tablespace_name},         :title=> 'Name of the tablespace containing the LOB segment'}
   column_options << {:caption=> 'Init. extent (kBytes)',:data=>proc{|rec| fn(rec.initial_extent.to_i/1024)},  :title=> 'Size in kBytes of the initial extent of the LOB data partition', :align=>:right}
   column_options << {:caption=> 'Next extent (kBytes)',:data=>proc{|rec| fn(rec.next_extent.to_i/1024)},  :title=> 'Size in kBytes of secondary extents of the LOB data partition', :align=>:right}
   column_options << {:caption=> 'Min. extents',        :data=>proc{|rec| fn(rec.min_extents)},         :title=> 'Minimum number of extents allowed in the segment of the LOB data partition', :align=>:right}
   column_options << {:caption=> 'Max. extents',        :data=>proc{|rec| fn(rec.max_extents)},         :title=> 'Maximum number of extents allowed in the segment of the LOB data partition', :align=>:right}
   column_options << {:caption=> 'Max. blocks',         :data=>proc{|rec| fn(rec.max_size)},            :title=> 'Maximum number of blocks allowed in the segment of the LOB data partition, or DEFAULT', :align=>:right} if get_db_version >= '11.2'


   column_options << {:caption=> 'Pct. increase',       :data=>proc{|rec| fn(rec.pct_increase)},        :title=> 'Percentage increase in extent size for the LOB data partition', :align=>:right}
   column_options << {:caption=> 'Freelists',           :data=>proc{|rec| fn(rec.freelists)},           :title=> 'Number of process freelists allocated in the segment of the LOB data partition', :align=>:right}
   column_options << {:caption=> 'Freelist groups',     :data=>proc{|rec| fn(rec.freelist_groups)},     :title=> 'Number of freelist groups allocated in the segment of the LOB data partition', :align=>:right}
   column_options << {:caption=> 'Logging',             :data=>proc{|rec| rec.logging},                 :title=> 'Logging attribute of the LOB data partition'}
   column_options << {:caption=> 'Buffer pool',         :data=>proc{|rec| rec.buffer_pool},             :title=> 'Default buffer pool for the LOB partition blocks'}
   column_options << {:caption=> 'Flash cache',         :data=>proc{|rec| rec.flash_cache},             :title=> 'Database Smart Flash Cache hint to be used for partition blocks'} if get_db_version >= '11.2'
   column_options << {:caption=> 'Cell flash cache',    :data=>proc{|rec| rec.cell_flash_cache},        :title=> 'Cell Flash Cache hint to be used for partition blocks'} if get_db_version >= '11.2'


   column_options << {:caption=> 'Chunk size (Bytes)',  :data=>proc{|rec| fn(rec['chunk'])},            :title=> 'Size (in bytes) of the LOB chunk as a unit of allocation or manipulation', :align=>:right}
   column_options << {:caption=> 'Pct version',         :data=>proc{|rec| rec.pctversion},              :title=> 'Maximum percentage of the LOB space used for versioning', :align=>:right}
   column_options << {:caption=> 'Retention',           :data=>proc{|rec| rec.retention},               :title=> 'Maximum time duration for versioning of the LOB space',  :align=>:right}
   column_options << {:caption=> 'Min. retention',      :data=>proc{|rec| rec.minretention},            :title=> 'Minimum retention duration for a SecureFiles segment, or DEFAULT',  :align=>:right}
   column_options << {:caption=> 'Cache',               :data=>proc{|rec| rec.cache},                   :title=> 'Indicates whether and how the cluster is to be cached in the buffer cache (YES, NO, CACHEREADS)'}
   column_options << {:caption=> 'Logging',             :data=>proc{|rec| rec.logging},                 :title=> 'Indicates whether changes to the LOB are logged (YES) or not (NO)' }
   column_options << {:caption=> 'Encrypt',             :data=>proc{|rec| rec.encrypt},                 :title=> 'Indicates whether or not the LOB is encrypted.' } if get_db_version >= '11.2'
   column_options << {:caption=> 'Compress.',           :data=>proc{|rec| rec.compression},             :title=> 'Level of compression used for this LOB.' } if get_db_version >= '11.2'
   column_options << {:caption=> 'Dedup.',              :data=>proc{|rec| rec.deduplication},           :title=> 'Kind of deduplication used for this LOB.' } if get_db_version >= '11.2'
   column_options << {:caption=> 'In row',              :data=>proc{|rec| rec.in_row},                  :title=> 'Indicates whether some of the LOBs are stored inline with the base row (YES) or not (NO). For partitioned objects, refer to the *_LOB_PARTITIONS and *_PART_LOBS views.' }
   column_options << {:caption=> 'Secure file',         :data=>proc{|rec| rec.securefile},              :title=> 'Indicates whether the LOB is SecureFiles (YES) or not (NO)' } if get_db_version >= '11.2'
   column_options << {:caption=> 'Created',             :data=>proc{|rec| rec.segment_created},         :title=> 'Indicates whether the LOB segment has been created (YES) or not (NO)' } if get_db_version >= '11.2'

%>



<%= gen_slickgrid(@partitions, column_options, {
    :caption => "Partitions of LOB #{@lob_name} of #{@owner}.#{@table_name}",
    :max_height => 450
})
%>

<div id="<%= @update_area %>"></div>