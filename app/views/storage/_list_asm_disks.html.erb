<%
  @update_area = get_unique_area_id

  link_disk_group = proc do |rec, value|
    ajax_link(value, {
      controller:     :storage,
      action:         :list_asm_disk_groups,
      group_number:   rec.group_number,
      update_area:    @update_area
    },
              title: "Show disk group attributes")
  end

  column_options = []
  column_options << { caption: 'Group no.',             data: proc{|rec| link_disk_group.call(rec, fn(rec.group_number))}, title: "Cluster-wide number assigned to the disk group (primary key)", align: :right}
  column_options << { caption: 'Disk group name',       data: proc{|rec| link_disk_group.call(rec, rec.disk_group_name)},  title: "Name of the disk group"}
  column_options << { caption: 'Disk no.',              data: proc{|rec| fn(rec.disk_number)},                    title: "Number assigned to the disk within its disk group", align: :right}
  column_options << { caption: 'Compound index',        data: proc{|rec| fn(rec.compound_index)},                 title: "A 32-bit number consisting of a disk group number in the high-order 8 bits and a disk number in the low-order 24 bits (for efficient access to the view)", align: :right}
  column_options << { caption: 'Incarnation',           data: proc{|rec| fn(rec.incarnation)},                    title: "Incarnation number for the disk", align: :right}
  column_options << { caption: 'Mount status',          data: proc{|rec| rec.mount_status},                       title: "Per-instance status of the disk relative to group mounts:\n- MISSING - Oracle ASM metadata indicates that the disk is known to be part of the Oracle ASM disk group but no disk in the storage system was found with the indicated name\n-CLOSED - Disk is present in the storage system but is not being accessed by Oracle ASM\n- OPENED - Disk is present in the storage system and is being accessed by Oracle ASM. This is the normal state for disks in a database instance which are part of a Disk Group being actively used by the instance.\n- CACHED - Disk is present in the storage system and is part of a disk group being accessed by the Oracle ASM instance. This is the normal state for disks in an Oracle ASM instance which are part of a mounted disk group.\n- IGNORED - Disk is present in the system but is ignored by Oracle ASM because of one of the following:\n  * The disk is detected by the system library but is ignored because an Oracle ASM library discovered the same disk\n * Oracle ASM has determined that the membership claimed by the disk header is no longer valid\n- CLOSING - Oracle ASM is in the process of closing this disk"}
  column_options << { caption: 'Header status',         data: proc{|rec| rec.header_status},                      title: "Per-instance status of the disk as seen by discovery:\n- UNKNOWN - Oracle ASM disk header has not been read\n- CANDIDATE - Disk is not part of a disk group and may be added to a disk group with the ALTER DISKGROUP statement\n- INCOMPATIBLE - Version number in the disk header is not compatible with the Oracle ASM software version\n- PROVISIONED - Disk is not part of a disk group and may be added to a disk group with the ALTER DISKGROUP statement. The PROVISIONED header status is different from the CANDIDATE header status in that PROVISIONED implies that an additional platform-specific action has been taken by an administrator to make the disk available for Oracle ASM.\n- MEMBER - Disk is a member of an existing disk group. No attempt should be made to add the disk to a different disk group. The ALTER DISKGROUP statement will reject such an addition unless overridden with the FORCE option.\n- FORMER - Disk was once part of a disk group but has been dropped cleanly from the group. It may be added to a new disk group with the ALTER DISKGROUP statement.\n- CONFLICT - Oracle ASM disk was not mounted due to a conflict\n- FOREIGN - Disk contains data created by an Oracle product other than ASM. This includes datafiles, logfiles, and OCR disks."}
  column_options << { caption: 'Mode status',           data: proc{|rec| rec.mode_status},                        title: "Global status about which kinds of I/O requests are allowed to the disk:\n- ONLINE - Disk is online and operating normally. Reads and writes are attempted when the disk is mounted. Reads are attempted as part of disk discovery.\n- OFFLINE - Disk is offline and access to data is not permitted. Reads and writes are not attempted. An offline disk remains logically part of its disk group."}
  column_options << { caption: 'Global state',          data: proc{|rec| rec.state},                              title: "Global state of the disk with respect to the disk group:\n- UNKNOWN - Oracle ASM disk state is not known (typically the disk is not mounted)\n- NORMAL - Disk is online and operating normally\n- ADDING - Disk is being added to a disk group, and is pending validation by all instances that have the disk group mounted\n- DROPPING - Disk has been manually taken offline and space allocation or data access for the disk halts. Rebalancing will commence to relocate data off the disks to other disks in the disk group. Upon completion of the rebalance, the disk is expelled from the group.\n- HUNG - Disk drop operation cannot continue because there is insufficient space to relocate the data from the disk being dropped\n- FORCING - Disk is being removed from the disk group without attempting to offload its data. The data will be recovered from redundant copies, where possible.\n- DROPPED - Disk has been fully expelled from the disk group"}
  column_options << { caption: 'Redundancy',            data: proc{|rec| rec.redundancy},                         title: "Hardware redundancy of the disk"}
  column_options << { caption: 'Library',               data: proc{|rec| rec.library},                            title: "Name of the library that discovered the disk"}
  column_options << { caption: 'OS size (GB)',          data: proc{|rec| fn(rec.os_mb.to_f/1024)},                title: "Size of the disk (in gigabytes) as reported by the host operating system", data_title: proc{|rec| "%t\n\n#{size_explain(rec.os_mb)}"}, align: :right}
  column_options << { caption: 'Total size (GB)',       data: proc{|rec| fn(rec.total_mb.to_f/1024)},             title: "Total capacity of the disk (in gigabytes)", data_title: proc{|rec| "%t\n\n#{size_explain(rec.total_mb)}"}, align: :right}
  column_options << { caption: 'Free size (GB)',        data: proc{|rec| fn(rec.free_mb.to_f/1024)},              title: "Unused capacity of the disk (in gigabytes)", data_title: proc{|rec| "%t\n\n#{size_explain(rec.free_mb)}"}, align: :right}
  column_options << { caption: 'Hot used (GB)',         data: proc{|rec| fn(rec.hot_used_mb.to_f/1024)},          title: "Number of used gigabytes in the hot region", data_title: proc{|rec| "%t\n\n#{size_explain(rec.hot_used_mb)}"}, align: :right}
  column_options << { caption: 'Cold used (GB)',        data: proc{|rec| fn(rec.cold_used_mb.to_f/1024)},         title: "Number of used gigabytes in the cold region", data_title: proc{|rec| "%t\n\n#{size_explain(rec.cold_used_mb)}"}, align: :right}
  column_options << { caption: 'Disk name',             data: proc{|rec| rec.name},                               title: "Name of the disk"}
  column_options << { caption: 'Fail group name',       data: proc{|rec| rec.failgroup},                          title: "Name of the failure group containing the disk"}
  column_options << { caption: 'Label',                 data: proc{|rec| rec.label},                              title: "Disk label portion of the name returned by discovery"}
  column_options << { caption: 'Path',                  data: proc{|rec| rec.path},                               title: "Operating system pathname portion of the name returned by discovery"}
  column_options << { caption: 'UDID',                  data: proc{|rec| rec.udid},                               title: "Unique Device ID portion of the name returned by discovery"}
  column_options << { caption: 'Product',               data: proc{|rec| rec.product},                            title: "Name of the manufacturer and the name of the product. All disks with the same product id will have the same performance and reliability characteristics."}
  column_options << { caption: 'Create date',           data: proc{|rec| localeDateTime rec.create_date},         title: "Date and time when the disk was added to the disk group"}
  column_options << { caption: 'Mount date',            data: proc{|rec| localeDateTime rec.mount_date},          title: "Date and time when the disk was mounted by the first instance"}
  column_options << { caption: 'Repair timer',          data: proc{|rec| fn(rec.repair_timer)},                   title: "Seconds remaining until the disk is automatically dropped (0 if not failed)", align: :right}
  column_options << { caption: 'Reads',                 data: proc{|rec| fn(rec.reads)},                          title: "Total number of I/O read requests for the disk", align: :right}
  column_options << { caption: 'Writes',                data: proc{|rec| fn(rec.writes)},                         title: "Total number of I/O write requests for the disk", align: :right}
  column_options << { caption: 'Read errors',           data: proc{|rec| fn(rec.read_errs)},                      title: "Total number of failed I/O read requests for the disk", align: :right}
  column_options << { caption: 'Write errors',          data: proc{|rec| fn(rec.write_errs)},                     title: "Total number of failed I/O write requests for the disk", align: :right}
  column_options << { caption: 'Read time',             data: proc{|rec| fn(rec.read_time)},                      title: "Total I/O time (in seconds) for read requests for the disk if the TIMED_STATISTICS initialization parameter is set to true (0 if set to false)", align: :right}
  column_options << { caption: 'Write time',            data: proc{|rec| fn(rec.write_time)},                     title: "Total I/O time (in seconds) for write requests for the disk if the TIMED_STATISTICS initialization parameter is set to true (0 if set to false)", align: :right}
  column_options << { caption: 'GB read',               data: proc{|rec| fn(rec.bytes_read.to_f/(1024*1024*1024))},    title: "Total number of bytes read from the disk", data_title: proc{|rec| "%t\n\n#{size_explain(rec.bytes_read.to_f/(1024*1024))}"}, align: :right}
  column_options << { caption: 'GB written',            data: proc{|rec| fn(rec.bytes_written.to_f/(1024*1024*1024))}, title: "Total number of bytes written to the disk", data_title: proc{|rec| "%t\n\n#{size_explain(rec.bytes_written.to_f/(1024*1024))}"}, align: :right}
  column_options << { caption: 'Pref. read',            data: proc{|rec| rec.preferred_read},                     title: "Status of the preferred read failure group:\n- U - Disk group has no preferred read failure group\n- \n- Y - Disk is a preferred read diskN - Disk is not a preferred read disk\nFor a disk group with one or more preferred read failure groups, if the disk is in one of the preferred read failure groups, the value of this column is Y; otherwise it is N."}
  column_options << { caption: 'Hash value',            data: proc{|rec| fn(rec.hash_value)},                     title: "A unique hash value for an ASM disk, computed using the ASM disk name (as specified by NAME column in v$asm_disk) and the ASM disk group name (as specified by NAME column in v$asm_diskgroup).", align: :right}
  column_options << { caption: 'Hot reads',             data: proc{|rec| fn(rec.hot_reads)},                      title: "Number of reads from the hot region on disk", align: :right}
  column_options << { caption: 'Hot writes',            data: proc{|rec| fn(rec.hot_writes)},                     title: "Number of writes to the hot region on disk", align: :right}
  column_options << { caption: 'Hot GB read',           data: proc{|rec| fn(rec.hot_bytes_read.to_f/(1024*1024*1024))},    title: "Total number of bytes read from the hot region of the disk", data_title: proc{|rec| "%t\n\n#{size_explain(rec.hot_bytes_read.to_f/(1024*1024))}"}, align: :right}
  column_options << { caption: 'Hot GB written',        data: proc{|rec| fn(rec.hot_bytes_written.to_f/(1024*1024*1024))}, title: "Total number of bytes written to the hot region of the disk", data_title: proc{|rec| "%t\n\n#{size_explain(rec.hot_bytes_written.to_f/(1024*1024))}"}, align: :right}
  column_options << { caption: 'Cold reads',            data: proc{|rec| fn(rec.cold_reads)},                     title: "Number of reads from the cold region on disk", align: :right}
  column_options << { caption: 'Cold writes',           data: proc{|rec| fn(rec.cold_writes)},                    title: "Number of writes to the cold region on disk", align: :right}
  column_options << { caption: 'Cold GB read',          data: proc{|rec| fn(rec.cold_bytes_read.to_f/(1024*1024*1024))},    title: "Total number of bytes read from the cold region of the disk", data_title: proc{|rec| "%t\n\n#{size_explain(rec.cold_bytes_read.to_f/(1024*1024))}"}, align: :right}
  column_options << { caption: 'Cold GB written',       data: proc{|rec| fn(rec.cold_bytes_written.to_f/(1024*1024*1024))}, title: "Total number of bytes written to the cold region of the disk", data_title: proc{|rec| "%t\n\n#{size_explain(rec.cold_bytes_written.to_f/(1024*1024))}"}, align: :right}
  column_options << { caption: 'Voting file',           data: proc{|rec| rec.voting_file},                        title: "Indicates whether the disk contains a voting file (Y) or not (N)"}
  column_options << { caption: 'Sector size',           data: proc{|rec| fn(rec.sector_size)},                    title: "Physical block size (in bytes)", align: :right}
  column_options << { caption: 'Failgroup type',        data: proc{|rec| rec.failgroup_type},                     title: "Type of the failure group:\n- REGULAR\n- QUORUM"}
%>

<%= gen_slickgrid(@asm_disks, column_options, {
  max_height: 450, caption: "ASM disks from v$ASM_Disk#{" for group number = #{@group_number}" if @group_number}", show_pin_icon: 1,
  update_area:   @update_area
}) %>
