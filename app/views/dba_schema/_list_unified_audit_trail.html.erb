
<%
  @update_area = get_unique_area_id

  def link_session(rec)
    ajax_link(rec.sessionid, {
      :controller   => :dba_schema,
      :action       => :list_unified_audit_trail,
      :session_id   => rec.sessionid,
      dbid:         rec.dbid,
      :update_area  => @update_area
    },
              :title=> 'Show audit records of this session')

  end

  def link_sql_text(rec)
    if rec.sql_text
      # Da der Inhalt nachträeglich erst per JSaufgerufen wird, müssen ' doppelt escaped werden
      "<a title=\"Show complete SQL-Statement (below)\" onclick=\"list_audit_sql('#{j(my_html_escape rec.sql_text.gsub(/'/, "'+String.fromCharCode(39)+'")) }');\">#{rec.sql_text.strip[0,30]}</a>".html_safe
    end
  end

  db_user_data_title = proc do |rec|
    "%t\n\nProxy username = #{rec.dbproxy_username}
    External user ID = #{rec.external_userid}
    Global user ID = #{rec.global_userid}
    DB-Link info = #{rec.dblink_info}
    Real application security user = #{rec.xs_user_name}
    Current user = #{rec.current_user}
    "
  end

  show_additional_info = proc do|rec|
    output = ''
    output << "Owner and name after rename = #{link_object_description(@update_area, rec.new_schema, rec.new_name)}\n" if rec.new_schema || rec.new_name
    output << "Object privileges ganted or revoked = '#{rec.object_privileges}'\n"  if rec.object_privileges
    output << "System privileges ganted or revoked = '#{rec.system_privilege}'\n"   if rec.system_privilege
    output << "Audit option = '#{rec.audit_option}'\n"                              if rec.audit_option
    output << "Comment = '#{rec.additional_info}'\n"                                if rec.additional_info
    output << "Execution ID = '#{rec.execution_id}'\n"                              if rec.execution_id
    output << "Application contexts = '#{rec.application_contexts}'\n"              if rec.application_contexts
    output << "Managed role = '#{rec.role}'\n"                                      if rec.role
    output << "Target user = '#{rec.target_user}'\n"                                if rec.target_user
    output << "Excluded user = '#{rec.excluded_user}'\n"                            if rec.excluded_user
    output << "Excluded schema = '#{rec.excluded_schema}'\n"                        if rec.excluded_schema
    output << "Excluded object = '#{rec.excluded_object}'\n"                        if rec.excluded_object
    output
  end

  column_options =
    [
      {:caption=> 'Time',              :data=>proc{|rec| localeDateTime(rec.event_timestamp, :fractions6)},  :title=> 'Timestamp of recorded action in local timezone', data_title: proc{|rec| "%t\n\nTimestamp in UTC: #{localeDateTime(rec.event_timestamp_utc, :fractions6) if get_db_version > '19'}"}},
      {:caption=> 'Audit type',        :data=>proc{|rec| rec.audit_type},                          :title=> 'Type of audit record source'},
      {:caption=> 'Client machine',    :data=>proc{|rec| link_machine_ip_info(@update_area, rec.userhost)},      :title=> 'Client machine', data_title: proc{|rec| "%t\n\nTerminal = #{rec.terminal}"}},
      {:caption=> 'Client OS user',    :data=>proc{|rec| rec.os_username},                         :title=> 'Client OS user name'},
      {:caption=> 'Client program',    :data=>proc{|rec| rec.client_program_name},                 :title=> 'Name of the program used for the database session', max_wrap_width: 70, data_title: proc{|rec| "%t\n\n#{rec.client_program_name}"}},
      {:caption=> 'DB-User',           :data=>proc{|rec| rec.dbusername},                          :title=> 'DB user name used to connect', data_title: db_user_data_title},
      {:caption=> 'Proc',              :data=>proc{|rec| rec.os_process},                          :title=> "OS process identifier of the database Oracle process"},
      {:caption=> 'Action',            :data=>proc{|rec| rec.action_name},                         :title=> 'Name of the action executed by the user. The name should be read in conjunction with the AUDIT_TYPE to understand the real action.'},
      {:caption=> 'Object', :data=>proc{|rec| link_object_description(@update_area, rec.object_schema, rec.object_name, nil, (get_db_version >= '21.0' ? rec['object_type']: nil)) }, :title=> 'Owner and name of affected object', max_wrap_width: 90, data_title: proc{|rec| "%t\n\nObject = #{rec.object_schema}.#{rec.object_name}\nObject edition = #{rec.object_edition}"}},
      {:caption=> 'I',                 :data=>proc{|rec| rec.instance_id},                         :title=> 'Instance number as specified by the INSTANCE_NUMBER initialization parameter'},
      {:caption=> 'Session-ID',        :data=>proc{|rec| link_session(rec)},                       :title=> 'ID of database session (AUDSID)', data_title: proc{|rec| "%t\nStatement ID = #{rec.statement_id}\nEntry ID = #{rec.entry_id}\nProxy Session ID = #{rec.proxy_sessionid}\nDBID = #{rec.dbid}"}},
      {:caption=> 'SQL-Text',          :data=>proc{|rec| link_sql_text(rec)},                      :title=> 'SQL-Text', max_wrap_width: 70, data_title: proc{|rec| "%t\n\n#{rec.sql_text}"}},
      {:caption=> 'Binds',             :data=>proc{|rec| rec.sql_binds},                           :title=> 'Bind variable data of the query', max_wrap_width: 70, data_title: proc{|rec| "%t\n\n#{rec.sql_binds}"}},
      #      {:caption=> 'S',                 :data=>proc{|rec| rec.ses_actions},                         :title=> 'Session summary (a string of 16 characters, one for each action type in the order ALTER, AUDIT, COMMENT, DELETE, GRANT, INDEX, INSERT, LOCK, RENAME, SELECT, UPDATE, REFERENCES, and EXECUTE). Positions 14, 15, and 16 are reserved for future use. The characters are: - None, S - Success, F - Failure, B - Both'},
      #    {:caption=> 'Logoff-Time',       :data=>proc{|rec| localeDateTime(rec.logoff_time)},         :title=> 'Date and time of user log off'},  # Auskommentiert, da bei logoff identisch mit Timestamp
      #{:caption=> 'LR',                :data=>proc{|rec| fn rec.logoff_lread},                     :title=> 'Logical reads for the session', :align=>:right},
      #{:caption=> 'PR',                :data=>proc{|rec| fn rec.logoff_pread},                     :title=> 'Physical reads for the session', :align=>:right},
      #{:caption=> 'LW',                :data=>proc{|rec| fn rec.logoff_lwrite},                    :title=> 'Logical writes for the session', :align=>:right},
  #{:caption=> 'DL',                :data=>proc{|rec| fn rec.logoff_dlock if rec.logoff_dlock != '0'}, :title=> 'Deadlocks detected during the session', :align=>:right},
      # {:caption=> 'C',                 :data=>proc{|rec| fn rec.session_cpu},                      :title=> 'Amount of CPU time used by each Oracle session', :align=>:right},
      {:caption=> 'Error code',        :data=>proc{|rec| rec.return_code},                         :title=> 'Oracle error code generated by the action. Some useful values: 0 - Action succeeded, 2004 - Security violation', align: :right},
      {:caption=> 'Priv.',             :data=>proc{|rec| rec.system_privilege_used},               :title=> 'System privilege used to execute the action'},
      {:caption=> 'FGA pol.',          :data=>proc{|rec| rec.fga_policy_name},                     :title=> 'Name of the Fine-Grained Auditing Policy', max_wrap_width: 20, data_title: proc{|rec| "%t\n\n#{rec.fga_policy_name}"}},
      {:caption=> 'Tx.',               :data=>proc{|rec| rec.transactionid_hex},                   :title=> 'Transaction identifier of the transaction in which the object was accessed or modified', max_wrap_width:20, data_title: proc{|rec| "%t\n#{rec.transactionid_hex}"}},
      {:caption=> 'SCN',               :data=>proc{|rec| fn(rec.scn)},                             :title=> 'System change number (SCN) of the query', align: :right, max_wrap_width: 25, data_title:proc{|rec| "%t\n#{fn(rec.scn)}"}},
      {:caption=> 'Client-ID',         :data=>proc{|rec| rec.client_identifier},                   :title=> 'Client identifier in each Oracle session'},
      {caption: 'Authent. type',       data: proc{|rec| rec.authentication_type},                  title: 'Authentication information for the session user', max_wrap_width: 60, data_title: proc{|rec| "%t\n\n#{rec.authentication_type}"}},
      {caption: 'Unified audit policies', data: proc{|rec| rec.unified_audit_policies},            title: 'Lists the audit policies that caused the current audit record', max_wrap_width: 60, data_title: proc{|rec| "%t\n\n#{rec.unified_audit_policies}"}},
      {caption: 'additional info',     data: show_additional_info,                                 title: 'Additional info only shown if the column value is not NULL'},

    ]
%>

<script type="text/javascript">
    function list_audit_sql(sql_text){
        jQuery('#<%= @update_area %>').html('<pre class="yellow-panel">' + sql_text + '</pre>');
    }
</script>


<%=
  caption = "Audit-Records from Unified_Audit_Trail"
  caption << ", from #{@time_selection_start} until #{@time_selection_end}" if @time_selection_start && @time_selection_end
  caption << ", Instance=#{@instance}"            if @instance
  caption << ", DBID=#{@dbid}"                    if @dbid
  caption << ", Audit type=#{@audit_type}"        if @audit_type
  caption << ", Session-ID=#{@session_id}"        if @session_id
  caption << ", OS-User LIKE '#{@os_user}'"       if @os_user
  caption << ", DB-User LIKE '#{@os_user}'"       if @db_user
  caption << ", Machine LIKE '#{@machine}'"       if @machine
  caption << ", Object LIKE '#{@object_name}'"    if @object_name
  caption << ", Action LIKE '#{@action_name}'"    if @action_name

  gen_slickgrid(@audits, column_options, {
    :caption => caption,
    :max_height => 450,
    show_pin_icon: 1,
    update_area: @update_area
  })
%>
