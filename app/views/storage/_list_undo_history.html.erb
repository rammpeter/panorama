<%
  @update_area = get_unique_area_id

  column_options =
  [
    {:caption=>'Begin TS',                  :data=>proc{|rec| localeDateTime(rec.begin_time) },             :title=>'Begin of time interval', :data_title=>proc{|rec| "%t, End of time interval: #{localeDateTime(rec.end_time)}"}, :plot_master_time=>true},
    {:caption=>'I',                         :data=>proc{|rec| rec.instance_number },                        :title=>'RAC instance' },
    {:caption=>'UNDO blocks consumed',      :data=>proc{|rec| fn rec.undoblks },        :align=>:right, :title=>'Represents the total number of undo blocks consumed. You can use this column to obtain the consumption rate of undo blocks, and thereby estimate the size of the undo tablespace needed to handle the workload on your system.' },
    {:caption=>'UNDO MB consumed',          :data=>proc{|rec| fn(rec.undoblks * rec.block_size / (1024*1024), 2) },        :align=>:right, :title=>'Represents the total number of undo MBs consumed. You can use this column to obtain the consumption rate of undo blocks, and thereby estimate the size of the undo tablespace needed to handle the workload on your system.' },
    {:caption=>'Txn. count',                :data=>proc{|rec| fn rec.txncount },        :align=>:right, :title=>'Identifies the total number of transactions executed within the period' },
    {:caption=>'Max. query length (sec.)',  :data=>proc{|rec| fn rec.maxquerylen },     :align=>:right, :title=>'Identifies the length of the longest query (in seconds) executed in the instance during the period. You can use this statistic to estimate the proper setting of the UNDO_RETENTION initialization parameter. The length of a query is measured from the cursor open time to the last fetch/execute time of the cursor. Only the length of those cursors that have been fetched/executed during the period are reflected in the view.' },
    {:caption=>'Max. query SQL-ID',         :data=>proc{|rec| link_historic_sql_id(rec.instance_number, rec.maxquerysqlid, @time_selection_start, @time_selection_end, @update_area) }, :title=>'SQL identifier of the longest running SQL statement in the period' },
    {:caption=>'Max. concurr. TX',          :data=>proc{|rec| fn rec.maxconcurrency },  :align=>:right, :title=>'Identifies the highest number of transactions executed concurrently within the period' },
    {:caption=>'Active blocks',             :data=>proc{|rec| fn rec.activeblks },      :align=>:right, :title=>'Total number of blocks in the active extents of the undo tablespace for the instance at the sampled time in the period' },
    {:caption=>'Active MB',                 :data=>proc{|rec| fn(rec.activeblks * rec.block_size / (1024*1024), 2) },      :align=>:right, :title=>'Total MB in the active extents of the undo tablespace for the instance at the sampled time in the period' },
    {:caption=>'Unexpired blocks',          :data=>proc{|rec| fn rec.unexpiredblks },   :align=>:right, :title=>'Total number of blocks in the unexpired extents of the undo tablespace for the instance at the sampled time in the period' },
    {:caption=>'Unexpired MB',              :data=>proc{|rec| fn(rec.unexpiredblks * rec.block_size / (1024*1024), 2) },   :align=>:right, :title=>'Total MB in the unexpired extents of the undo tablespace for the instance at the sampled time in the period' },
    {:caption=>'Expired blocks',            :data=>proc{|rec| fn rec.expiredblks },     :align=>:right, :title=>'Total number of blocks in the expired extents of the undo tablespace for the instance at the sampled time in the period' },
    {:caption=>'ExpiredMB',                 :data=>proc{|rec| fn(rec.expiredblks * rec.block_size / (1024*1024), 2) },     :align=>:right, :title=>'Total MB in the expired extents of the undo tablespace for the instance at the sampled time in the period' },
    {:caption=>'Tuned undo retention',      :data=>proc{|rec| fn rec.tuned_undoretention }, :align=>:right, :title=>'System tuned value indicating the period for which undo is being retained' },
    {:caption=>'Unexpired steal attempts',  :data=>proc{|rec| fn rec.unxpstealcnt },    :align=>:right, :title=>'Number of attempts to obtain undo space by stealing unexpired extents from other transactions' },
    {:caption=>'Unexpired blocks removed',  :data=>proc{|rec| fn rec.unxpblkrelcnt },   :align=>:right, :title=>'Number of unexpired blocks removed from certain undo segments so they can be used by other transactions' },
    {:caption=>'Unexpired blocks reused',   :data=>proc{|rec| fn rec.unxpblkreucnt },   :align=>:right, :title=>'Number of unexpired undo blocks reused by transactions' },
    {:caption=>'Expired steal attempts',    :data=>proc{|rec| fn rec.expstealcnt },     :align=>:right, :title=>'Number of attempts to steal expired undo blocks from other undo segments' },
    {:caption=>'Expired blocks stolen',     :data=>proc{|rec| fn rec.expblkrelcnt },    :align=>:right, :title=>'Number of expired undo blocks stolen from other undo segments' },
    {:caption=>'Expired blocks reused',     :data=>proc{|rec| fn rec.expblkreucnt },    :align=>:right, :title=>'Number of expired undo blocks reused within the same undo segments' },
    {:caption=>'"snapshot to old" error count',     :data=>proc{|rec| fn rec.ssolderrcnt },     :align=>:right, :title=>'Identifies the number of times the error ORA-01555 occurred. You can use this statistic to decide whether or not the UNDO_RETENTION initialization parameter is set properly given the size of the undo tablespace. Increasing the value of UNDO_RETENTION can reduce the occurrence of this error.' },
    {:caption=>'"No space" error count',     :data=>proc{|rec| fn rec.nospaceerrcnt },  :align=>:right, :title=>'Identifies the number of times space was requested in the undo tablespace and there was no free space available. That is, all of the space in the undo tablespace was in use by active transactions. The corrective action is to add more space to the undo tablespace.' },



  ]

%>

<%= gen_slickgrid(@undo_history, column_options, {
        :max_height => 450,
        :caption => "UNDO usage history from #{PanoramaConnection.adjust_table_name('DBA_Hist_UndoStat')} and gv$UndoStat",
        show_pin_icon: 1

}) %>

<div id="<%= @update_area %>"></div>
