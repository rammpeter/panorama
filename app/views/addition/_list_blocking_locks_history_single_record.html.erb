<%

@update_area = get_unique_area_id

def link_column_sql_id(instance, sql_id, child_number, parsing_schema_name)
  link_historic_sql_id(instance, sql_id, @groupfilter[:Min_Timestamp], @groupfilter[:Max_Timestamp], @update_area, parsing_schema_name)
end

  link_ash_blocking_sid = proc do |rec|
    retval = ''
    if rec.blocking_sid
      retval << ajax_link(rec.blocking_sid, {
                          controller:  :active_session_history,
                          action:     :list_session_statistic_historic_grouping,
                          groupfilter: {
                            DBID:                 get_dbid,
                            Instance:             rec.blocking_instance_number,
                            Session_ID:           rec.blocking_sid,
                            Serial_No:             rec.blocking_serial_no,
                            Idle_Wait1:           'PX Deq Credit: send blkd',
                            time_selection_start: localeDateTime(rec.snapshot_timestamp),
                            time_selection_end:   localeDateTime(rec.snapshot_timestamp),
                          },
                          :groupby      => 'Session/Sn.',
                          :update_area  => @update_area
                        }, title: "Show Active Session History of this session with serial# = '#{rec.blocking_serial_no}' "
      )

      retval << ' '
      retval << ajax_submit('Thread', {
                             :action       => "list_blocking_reason_cascade",
                             :update_area  => @update_area,
                             :snapshot_timestamp => localeDateTime(rec.snapshot_timestamp),
                             :instance     => rec.instance_number,
                             :sid          => rec.sid,
                             :serial_no     => rec.serial_no
                            },
                            :title => "Show full cascade of blockers for this session"
      )
    end
    retval
  end

def link_column_blocking_reason_cascade(rec, value)
    ajax_link(value,
                {:action       => "list_blocking_reason_cascade",
                 :update_area  => @update_area,
                 :snapshot_timestamp => localeDateTime(rec.snapshot_timestamp),
                 :instance     => rec.instance_number,
                 :sid          => rec.sid,
                 :serial_no     => rec.serial_no
                },
         :title => "Show full cascade of blockers for this session")
end

column_options =
  [
    {:caption=>"Snapshot",              :data=>proc{|rec| localeDateTime(rec.snapshot_timestamp)},   :title=>"Snapshot timestamp"},
    {:caption=>"B. I",                  :data=>proc{|rec| rec.blocking_instance_number},     :title=>"RAC-Instance of blocking session"},
    {:caption=>"B. SID",                :data=>link_ash_blocking_sid,                         :title=>"Session-ID of blocking session", :data_title=>proc{|rec| "%t\nSerial_No=#{rec.blocking_serial_no}"}},
    {:caption=>"B. SQL-ID Prev.SQL-ID", :data=>proc{|rec| "#{link_column_sql_id(rec.blocking_instance_number, rec.blocking_sql_id, rec.blocking_sql_child_number, rec.blocking_user_name)} #{link_column_sql_id(rec.blocking_instance_number, rec.blocking_prev_sql_id, rec.blocking_prev_child_number, rec.blocking_user_name)}"}, :title=>"Last and previous executed SQL of blocking session"},
    {:caption=>"B. Event",              :data=>proc{|rec| rec.blocking_event},               :title=>"Wait event of blocking session"},
    {:caption=>"B. Status",             :data=>proc{|rec| rec.blocking_status},              :title=>"Status of blocking session"},
    {:caption=>"B. Client-Info / Module / Action",:data=>proc{|rec| "#{rec.blocking_client_info} #{rec.blocking_module} #{rec.blocking_action}"}, :title=>"Client-Info, module and action of blocking session", :data_title=>proc{|rec| "%t\n#{rec.blocking_app_desc}"}},
    {:caption=>"B. User",               :data=>proc{|rec| rec.blocking_user_name},            :title=>"User of blocking session", :data_title=>proc{|rec| "%t\nMachine=#{rec.blocking_machine}, OS-User=#{rec.blocking_os_user}, Process=#{rec.blocking_process}"}},
    {:caption=>"B. Program",            :data=>proc{|rec| rec.blocking_program},             :title=>"Program of blocking session", :data_title=>proc{|rec| "%t\nMachine=#{rec.blocking_machine}, OS-User=#{rec.blocking_os_user}, Process=#{rec.blocking_process}"}},
    {:caption=>"Wait Sec",              :data=>proc{|rec| formattedNumber(rec.seconds_in_wait)}, :title=>"Seconds in wait of blocked session", :align=>"right", data_title: proc{|rec| "%t\n#{seconds_explain(rec.seconds_in_wait)}"}},
    {:caption=>"Blocking Object",       :data=>proc{|rec| link_object_description(@update_area, rec.blocking_object_owner, rec.blocking_object_name)},  :title=>"Schema and name of blocking object"},
    {:caption=>"RowID / Primary Key",   :data=>proc{|rec| "#{rec.blocking_rowid} #{rec.waiting_for_pk_column_name}#{" = #{rec.waiting_for_pk_value}" if rec.waiting_for_pk_value}"}, :title=>"RowID as well as primary key columns and values of blocking object"},
    {:caption=>"W. I",                  :data=>proc{|rec| rec.instance_number},              :title=>"RAC-Instance of blocked session"},
    {:caption=>"W. SID",                :data=>proc{|rec| link_column_blocking_reason_cascade(rec, rec.sid)}, :title=>"Session-ID of blocked session", :data_title=>proc{|rec| "%t\nSerial_No=#{rec.serial_no}"}},
    {:caption=>"W. SQL-ID Prev.SQL-ID", :data=>proc{|rec| "#{link_column_sql_id(rec.instance_number, rec.sql_id, rec.sql_child_number, rec.user_name)} #{link_column_sql_id(rec.instance_number, rec.prev_sql_id, rec.prev_child_number, rec.user_name)}"}, :title=>"SQL-ID of current and previous SQL of blocked session"},
    {:caption=>"W. Event",              :data=>proc{|rec| rec.event},                        :title=>"Wait event of blocked session", data_title: proc{|rec| "%t\n\n#{explain_wait_event(rec.event)}"}},
    {:caption=>"W. Status",             :data=>proc{|rec| rec.status},                       :title=>"Status of blocked session"},
    {:caption=>"W. Client-Info / Module / Action", :data=>proc{|rec| "#{rec.client_info} #{rec.module} #{rec.action}"}, :title=>"Client-Info, module and action of blocked session", :data_title=>proc{|rec| "%t\n#{rec.waiting_app_desc}"}},
    {:caption=>"W. User",               :data=>proc{|rec| rec.user_name},                    :title=>"User of blocked session", :data_title=>proc{|rec| "%t\nMachine=#{rec.machine}, OS-User=#{rec.os_user}, Process=#{rec.process}"}},
    {:caption=>"W. Program",            :data=>proc{|rec| rec.program},                      :title=>"Program of blocked session", :data_title=>proc{|rec| "%t\nMachine=#{rec.machine}, OS-User=#{rec.os_user}, Process=#{rec.process}"}},
    {:caption=>"LT",                    :data=>proc{|rec| rec.lock_type},                    :title=>"Lock type of blocked session", :data_title=>proc{|rec| "%t\n#{lock_types(rec.lock_type)}"}},
    {:caption=>"ID1, ID2",              :data=>proc{|rec| "#{rec.id1}, #{rec.id2}"},         :title=>"ID1, ID2 of object waiting for"},
    {:caption=>"R",                     :data=>proc{|rec| rec.request},                      :title=>"requested lock mode", :data_title=>proc{|rec| "%t\n#{lock_modes(rec.request.to_s)}"}},
    {:caption=>"L",                     :data=>proc{|rec| rec.lock_mode},                    :title=>"held lock mode", :data_title=>proc{|rec| "%t\n#{lock_modes(rec.lock_mode.to_s)}"}},
    {:caption=>"W. Objectname",         :data=>proc{|rec| rec.object_name},                  :title=>"Name of object waiting for"},
  ]

    caption = "Single snapshots for "
    @groupfilter.each {|key,value|
        caption << "#{key} = '#{value}' </div>"
    }
%>

<%= gen_slickgrid(@locks, column_options, {:caption=>caption,
                                           :max_height=>450,
                                           show_pin_icon: 1,
                                           update_area:   @update_area
}) %>


