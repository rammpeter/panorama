<%
  @update_area = get_unique_area_id

# Generische Funktion fÃ¼r Link
  link_column_sql_id = proc do |rec|
    "\
#{link_historic_sql_id(rec.root_blocking_instance_number, rec.root_blocking_sql_id,      localeDateTime(rec.root_snapshot_timestamp), localeDateTime(rec.root_snapshot_timestamp), @update_area, rec.root_blocking_user_name)} \
#{link_historic_sql_id(rec.root_blocking_instance_number, rec.root_blocking_prev_sql_id, localeDateTime(rec.root_snapshot_timestamp), localeDateTime(rec.root_snapshot_timestamp), @update_area, rec.root_blocking_user_name)}"
  end

  link_root_blocking_sid = proc do |rec|
    ajax_link(rec.root_blocking_sid, {
      controller:  :active_session_history,
      action:     :list_session_statistic_historic_grouping,
      groupfilter: {
        DBID:                 get_dbid,
        Instance:             rec.root_blocking_instance_number,
        Session_ID:           rec.root_blocking_sid,
        Serial_No:             rec.root_blocking_serial_no,
        Idle_Wait1:           'PX Deq Credit: send blkd',
        time_selection_start: localeDateTime(rec.root_snapshot_timestamp),
        time_selection_end:   localeDateTime(rec.root_snapshot_timestamp),
      },
      :groupby      => 'Session/Sn.',
      :update_area  => @update_area
    }, title: "Show Active Session History of this session with serial# = '#{rec.root_blocking_serial_no}' "
    )

  end

  link_column_blocked = proc do |rec, value|
    ajax_link(value, {
              :action             => 'list_blocking_locks_history_hierarchy_detail',
              :update_area        => @update_area,
              :snapshot_timestamp => localeDateTime(rec.root_snapshot_timestamp),
              :blocking_instance  => rec.root_blocking_instance_number,
              :blocking_sid       => rec.root_blocking_sid,
              :blocking_serial_no  => rec.root_blocking_serial_no
            },
     :title=>'Show sessions blocked by this session')
  end

  link_blocking_object = proc do |rec|
    if rec.root_blocking_object[0,1] == '<' && rec.root_blocking_object[rec.root_blocking_object.length-1,1] =='>'
      rec.root_blocking_object
    else
      link_object_description(@update_area, rec.root_blocking_object.split('.')[0], rec.root_blocking_object.split('.')[1])
    end
  end


column_options =
  [
    {:caption=>"Snapshot",              :data=>proc{|rec| localeDateTime(rec.root_snapshot_timestamp)},                      :title=>"Snapshot timestamp of locks recording"},
    {:caption=>"B.I.",                  :data=>proc{|rec| rec.root_blocking_instance_number},                                :title=>"Instance of blocking session"},
    {:caption=>"B.SID",                 :data=>link_root_blocking_sid,                                                       :title=>"SID of root blocking session", :data_title=>proc{|rec| "Serial_No=#{rec.root_blocking_serial_no}"}},
    {:caption=>"Direct Blocked",        :data=>proc{|rec| link_column_blocked.call(rec, "< #{fn(rec.blocked_sessions_direct)} >")},  :title=>"Number of direct blocked sessions by this blocker", :align=>"right"},
    {:caption=>"Total Blocked",         :data=>proc{|rec| "< #{fn(rec.blocked_sessions_total)} >" },                         :title=>"Total number of blocked sessions by this blocker (direct and indirect)", :align=>"right"},
    {:caption=>"Wait (Sec.)",           :data=>proc{|rec| formattedNumber(rec.seconds_in_wait_total)},                       :title=>"Sum of seconds all direct and indirect blocked sessions are waiting", :align=>"right", data_title: proc{|rec| "%t\n#{seconds_explain(rec.seconds_in_wait_total)}"}},
    {:caption=>"B. SQL-ID Prev.SQL-ID", data: link_column_sql_id,                                                            :title=>"Last and previous executed SQL of blocking session"},
    {:caption=>"B. Event",              :data=>proc{|rec| rec.root_blocking_event},                                          :title=>"Wait event of blocking session", data_title: proc{|rec| "%t\n\n#{explain_wait_event(rec.root_blocking_event)}"}},
    {:caption=>"B. Status",             :data=>proc{|rec| rec.root_blocking_status},                                         :title=>"Status of blocking session"},
    {:caption=>"B. Client-Info / Module / Action",:data=>proc{|rec| "#{rec.root_blocking_client_info} #{rec.root_blocking_module} #{rec.root_blocking_action}"}, :title=>"Client-Info, Module und Action of blocking session", :data_title=>proc{|rec| "%t\n#{rec.blocking_app_desc}"}},
    {:caption=>"B. User",               :data=>proc{|rec| rec.root_blocking_user_name},     :title=>"User of blocking session", :data_title=>proc{|rec| "%t\nMachine=#{rec.root_blocking_machine}, OS-User=#{rec.root_blocking_os_user}, Process=#{rec.root_blocking_process}"}},
    {:caption=>"B. Program",            :data=>proc{|rec| rec.root_blocking_program},      :title=>"Program of blocking session", :data_title=>proc{|rec| "%t\nMachine=#{rec.root_blocking_machine}, OS-User=#{rec.root_blocking_os_user}, Process=#{rec.root_blocking_process}"}},
    {:caption=>"Blocking Object",       :data=>link_blocking_object,                                                        :title=>"Blocking object"},
    {:caption=>"RowID / Primary Key",   :data=>proc{|rec| "#{rec.root_blocking_rowid} #{rec.root_wait_for_pk_column_name} = #{rec.root_waiting_for_pk_value}"}, :title=>"RowID as well as primary key columns and values of blocking object"},
  ]
%>

<%= gen_slickgrid(@locks, column_options, {
        :caption => "Blocking Locks between #{@time_selection_start} and #{@time_selection_end} hierarchical grouped starting with root blocking sessions for each snapshot",
        :max_height=>450,
        show_pin_icon: 1,
        update_area:   @update_area

}) %>

