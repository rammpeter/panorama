<%
  @update_area = get_unique_area_id

  def link_cell_server(rec, value)
    ajax_link(value, {
                        :action           => :list_exadata_cell_server,
                        :cellname         => rec.cellname,
                        :update_area      => @update_area
                       },
                :title=>"Show info for cell server")
  end

  def link_cell_disk(rec, value)
    ajax_link(value, {
                        :action           => :list_exadata_cell_cell_disk,
                        :cellname         => rec.cellname,
                        :physical_disk_id => rec.id,
                        :update_area      => @update_area
                       },
                :title=>"Show info for configured cell disks for this physical disk")
  end

  def link_grid_disk(rec, value)
    ajax_link(value, {
                        :action           => :list_exadata_cell_grid_disk,
                        :cellname         => rec.cellname,
                        :physical_disk_id => rec.id,
                        :update_area      => @update_area
                       },
                :title=>"Show info for configured grid disks for this physical disk")
  end


  def calc_phys_detailled_status(rec)
    case
      when rec.predfailstatus     != 'FALSE' then rec.predfailstatus
      when rec.poorperfstatus     != 'FALSE' then rec.poorperfstatus
      when rec.wtcachingstatus    != 'FALSE' then rec.wtcachingstatus
      when rec.peerfailstatus     != 'FALSE' then rec.peerfailstatus
      when rec.criticalstatus     != 'FALSE' then rec.criticalstatus
      else 'FALSE'
    end
  end

  column_options =
      [
          {:caption=>'Cell name',             :data=>proc{|rec| link_cell_server(rec, rec.cellname)},                 :title=>"IP-address / cell name"},
          {:caption=>'Phys. disk name',       :data=>proc{|rec| rec.diskname},                                        :title=>"Physical disk name"},
          {:caption=>'Disk type',             :data=>proc{|rec| rec.disktype},                                        :title=>"Type of disk"},
          {:caption=>'LUNs',                  :data=>proc{|rec| rec.luns},                                            },
          {:caption=>'Model',                 :data=>proc{|rec| rec.makemodel},                                       },
          {:caption=>'Firmware',              :data=>proc{|rec| rec.physicalfirmware},                                },
          {:caption=>'Phys. disk insert time',:data=>proc{|rec| rec.physicalinserttime},                              :title=>"Physical disk insert time"},
          {:caption=>'Serial no.',            :data=>proc{|rec| rec.physicalserial},                                  },
          {:caption=>'Phys. disk size (GB)',  :data=>proc{|rec| fn(rec.physicalsize.to_i/(1024*1024*1024),1)},        :title=>"Physical size in GB", :align=>:right},
          {:caption=>'Cell disk count',       :data=>proc{|rec| link_cell_disk(rec, fn(rec.cd_cell_disk_count))},     :title=>"Number of configured cell disks", :align=>:right},
          {:caption=>'Cell disk size (GB)',   :data=>proc{|rec| fn(rec.cd_disk_size.to_i/(1024*1024*1024),1)},        :title=>"Summarized cell disk size in GB", :align=>:right},
          {:caption=>'Cell disk free space (GB)',   :data=>proc{|rec| fn(rec.cd_freespace.to_i/(1024*1024*1024),1)},  :title=>"Summarized cell disk free space in GB", :align=>:right},
          {:caption=>'Cell disk error count', :data=>proc{|rec| fn rec.cd_errorcount},                                :title=>"Sum over configured cell disks", :align=>:right},
          {:caption=>'Grid disk count',       :data=>proc{|rec| link_grid_disk(rec, fn(rec.gd_grid_disk_count))},     :title=>"Number of configured grid disks", :align=>:right},
          {:caption=>'Grid disk size (GB)',   :data=>proc{|rec| fn(rec.gd_disk_size.to_i/(1024*1024*1024),1)},        :title=>"Summarized grid disk size in GB", :align=>:right},
          {:caption=>'Slot',                  :data=>proc{|rec| rec.slotnumber},                                      :title=>"Slot number"},
          {:caption=>'Disk Status',           :data=>proc{|rec| rec.status},                                          :title=>"Disk status"},
          {:caption=>'Phys. disk ID',         :data=>proc{|rec| rec.id},                                      :title=>"ID of physical disk"},
          {:caption=>'Key 500',               :data=>proc{|rec| rec.key_500},                                 },
          {:caption=>'Phys. detailled status',:data=>proc{|rec| calc_phys_detailled_status(rec)},             :title=>"Phys. detailled status", :data_title=>proc{|rec| "%t:\nPred. fail status = '#{rec.predfailstatus}'\nPoor perf. status = '#{rec.poorperfstatus}'\nWT caching status = '#{rec.wtcachingstatus}'\nPeer fail status = '#{rec.peerfailstatus}'\nCritical status = '#{rec.criticalstatus}'"}             },
          {:caption=>'Err. cmd. timeout count', :data=>proc{|rec| fn rec.errcmdtimeoutcount},                 :align=>:right},
          {:caption=>'Err. hard read count',  :data=>proc{|rec| fn rec.errhardreadcount},                     :align=>:right},
          {:caption=>'Err. hard write count', :data=>proc{|rec| fn rec.errhardwritecount},                    :align=>:right},
          {:caption=>'Err. media count',      :data=>proc{|rec| fn rec.errmediacount},                        :align=>:right},
          {:caption=>'Err. other count',      :data=>proc{|rec| fn rec.errothercount},                        :align=>:right},
          {:caption=>'Err. seek count',       :data=>proc{|rec| fn rec.errseekcount},                         :align=>:right},
          {:caption=>'Sector remap count',    :data=>proc{|rec| fn rec.sectorremapcount},                     :align=>:right},
      ]

%>

<%= gen_slickgrid(@disks, column_options, {
    :max_height => 450,
    :caption => "EXADATA physical disks#{" for#{@filter}" if @filter.length > 0}"

}) %>

<div id="<%= @update_area %>">
</div>
