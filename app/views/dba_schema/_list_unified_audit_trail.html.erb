
<%
  @update_area = get_unique_area_id

  def link_session(rec)
    ajax_link(rec.sessionid, {
      :controller   => :dba_schema,
      :action       => :list_audit_trail,
      :session_id   => rec.sessionid,
      :update_area  => @update_area
    },
              :title=> 'Show audit records of session')

  end

  def link_sql_text(rec)
    if rec.sql_text
      # Da der Inhalt nachträeglich erst per JSaufgerufen wird, müssen ' doppelt escaped werden
      "<a title=\"Show complete SQL-Statement (below)\" onclick=\"list_audit_sql('#{j(my_html_escape rec.sql_text.gsub(/'/, "'+String.fromCharCode(39)+'")) }');\">#{rec.sql_text.strip[0,30]}</a>".html_safe
    end
  end

  column_options =
    [
      {:caption=> 'Time',              :data=>proc{|rec| localeDateTime(rec.event_timestamp, :fractions6)},  :title=> 'Timestamp of recorded action in local timezone', data_title: proc{|rec| "%t\n\nTimestamp in UTC: #{localeDateTime(rec.event_timestamp_utc, :fractions6)}"}},
      {:caption=> 'Audit type',        :data=>proc{|rec| rec.audit_type},                          :title=> 'Type of audit record source'},
      {:caption=> 'Machine',           :data=>proc{|rec| link_machine_ip_info(@update_area, rec.userhost)},      :title=> 'Client machine'},
      {:caption=> 'OS-User',           :data=>proc{|rec| rec.os_username},                         :title=> 'Client OS user name'},
      {:caption=> 'DB-User',           :data=>proc{|rec| rec.dbusername},                          :title=> 'DB user name used to connect'},
      {:caption=> 'Proc',              :data=>proc{|rec| rec.os_process},                          :title=> "OS process identifier of the database Oracle process"},
      {:caption=> 'Terminal',           :data=>proc{|rec| rec.terminal},                           :title=> 'Terminal info'},
      {:caption=> 'Action',            :data=>proc{|rec| rec.action_name},                         :title=> 'Name of the action executed by the user. The name should be read in conjunction with the AUDIT_TYPE to understand the real action.'},
      {:caption=> 'Object', :data=>proc{|rec| link_object_description(@update_area, rec.object_schema, rec.object_name, nil, (get_db_version >= '21.0' ? rec['object_type']: nil)) }, :title=> 'Owner and name of affected object', data_title: proc{|rec| "%t\nObject edition = #{rec.object_edition}"}},
      {:caption=> 'I',                 :data=>proc{|rec| rec.instance_id},                         :title=> 'Instance number as specified by the INSTANCE_NUMBER initialization parameter'},
      {:caption=> 'Session-ID',        :data=>proc{|rec| link_session(rec)},                       :title=> 'ID of database session (AUDSID)', data_title: proc{|rec| "%t\nStatement ID = #{rec.statement_id}\nEntry ID = #{rec.entry_id}\nProxy Session ID = #{rec.proxy_sessionid}"}},
      {:caption=> 'SQL-Text',          :data=>proc{|rec| link_sql_text(rec)},                      :title=> 'SQL-Text'},
      {:caption=> 'B',                 :data=>proc{|rec| rec.sql_binds},                           :title=> 'Bind variable data of the query'},
      {:caption=> 'N.O.',              :data=>proc{|rec| link_object_description(@update_area, rec.new_schema, rec.new_name)},  :title=> 'Owner and name after rename'},
      {:caption=> 'O.P.',              :data=>proc{|rec| rec.object_privileges},                   :title=> 'Object privileges granted or revoked by a GRANT or REVOKE statement'},
      {:caption=> 'S.P.',              :data=>proc{|rec| rec.system_privilege},                    :title=> 'System privileges granted or revoked by a GRANT or REVOKE statement'},
      {:caption=> 'A',                 :data=>proc{|rec| rec.audit_option},                        :title=> 'Auditing option set with the AUDIT statement'},
      #      {:caption=> 'S',                 :data=>proc{|rec| rec.ses_actions},                         :title=> 'Session summary (a string of 16 characters, one for each action type in the order ALTER, AUDIT, COMMENT, DELETE, GRANT, INDEX, INSERT, LOCK, RENAME, SELECT, UPDATE, REFERENCES, and EXECUTE). Positions 14, 15, and 16 are reserved for future use. The characters are: - None, S - Success, F - Failure, B - Both'},
      #    {:caption=> 'Logoff-Time',       :data=>proc{|rec| localeDateTime(rec.logoff_time)},         :title=> 'Date and time of user log off'},  # Auskommentiert, da bei logoff identisch mit Timestamp
      #{:caption=> 'LR',                :data=>proc{|rec| fn rec.logoff_lread},                     :title=> 'Logical reads for the session', :align=>:right},
      #{:caption=> 'PR',                :data=>proc{|rec| fn rec.logoff_pread},                     :title=> 'Physical reads for the session', :align=>:right},
      #{:caption=> 'LW',                :data=>proc{|rec| fn rec.logoff_lwrite},                    :title=> 'Logical writes for the session', :align=>:right},
  #{:caption=> 'DL',                :data=>proc{|rec| fn rec.logoff_dlock if rec.logoff_dlock != '0'}, :title=> 'Deadlocks detected during the session', :align=>:right},
      # {:caption=> 'C',                 :data=>proc{|rec| fn rec.session_cpu},                      :title=> 'Amount of CPU time used by each Oracle session', :align=>:right},
      {:caption=> 'Comment',           :data=>proc{|rec| rec.additional_info},                     :title=> 'Text comment on the audit trail entry, providing more information about the statement audited'},
      {:caption=> 'R',                 :data=>proc{|rec| rec.return_code},                         :title=> 'Oracle error code generated by the action. Some useful values: 0 - Action succeeded, 2004 - Security violation'},
      {:caption=> 'Priv.',             :data=>proc{|rec| rec.system_privilege_used},               :title=> 'System privilege used to execute the action'},
      {:caption=> 'P.',                :data=>proc{|rec| rec.fga_policy_name},                     :title=> 'Name of the Fine-Grained Auditing Policy'},
      {:caption=> 'Tx.',               :data=>proc{|rec| rec.transactionid_hex},                   :title=> 'Transaction identifier of the transaction in which the object was accessed or modified'},
      {:caption=> 'SCN',               :data=>proc{|rec| fn(rec.scn)},                             :title=> 'System change number (SCN) of the query', align: :right},
      {:caption=> 'Client-ID',         :data=>proc{|rec| rec.client_identifier},                   :title=> 'Client identifier in each Oracle session'},

    ]
%>

<script type="text/javascript">
    function list_audit_sql(sql_text){
        jQuery('#<%= @update_area %>').html('<pre class="yellow-panel">' + sql_text + '</pre>');
    }
</script>


<%=
  caption = "Audit-Records from Unified_Audit_Trail"
  caption << ", from #{@time_selection_start} until #{@time_selection_end}" if @time_selection_start && @time_selection_end
  caption << ", Instance=#{@instance}"            if @instance
  caption << ", Audit type=#{@audit_type}"        if @audit_type
  caption << ", Session-ID=#{@session_id}"        if @session_id
  caption << ", OS-User LIKE '#{@os_user}'"       if @os_user
  caption << ", DB-User LIKE '#{@os_user}'"       if @db_user
  caption << ", Machine LIKE '#{@machine}'"       if @machine
  caption << ", Object LIKE '#{@object_name}'"    if @object_name
  caption << ", Action LIKE '#{@action_name}'"    if @action_name

  gen_slickgrid(@audits, column_options, {
    :caption => caption,
    :max_height => 450,
    show_pin_icon: 1,
    update_area: @update_area
  })
%>
