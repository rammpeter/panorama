<%
  @update_area = get_unique_area_id
  @update_area_init_params = get_unique_area_id
%>

<div class="flex-row-container">
  <div id="<%= @update_area_init_params %>" class="flex-row-element">
    <%=
      render_async(:dba, :oracle_parameter, {
        option:              :memory,
        reduced_columns:      true,
        instance:             @instance,
        update_area:          @update_area_init_params
      })
    %>
  </div>

<%

  link_resize_ops = proc do |rec|
    ajax_link(fn(rec.resize_ops), {
                          :controller   => :dba_sga,
                          :action       => :list_resize_ops_per_component,
                          :instance     => rec.inst_id,
                          :pool         => rec.pool,
                          :update_area  => @update_area
                      },
                 :title => 'Show memory resize operations for this pool'
    )
  end


column_options =
[
  {:caption=>"I",           :data=>proc{|rec| rec.inst_id},                                        :title=>"Instance"},
  {:caption=>"Pool",        :data=>proc{|rec| rec.pool},                                           :title=>"Pool within the SGA"},
  {:caption=>"Bytes",       :data=>proc{|rec| formattedNumber(rec.bytes)},                         :title=>"Size in bytes", :align=>"right"},
  {:caption=>"MBytes",      :data=>proc{|rec| formattedNumber(rec.bytes/(1024*1024).to_f,2)},      :title=>"Size in megabytes", :align=>"right"},
  {:caption=>"GBytes",      :data=>proc{|rec| formattedNumber(rec.bytes/(1024*1024*1024).to_f,2)}, :title=>"Size in gigabytes", :align=>"right"},
  {:caption=>"Parameter",   :data=>proc{|rec| rec.parameter},                                      :title=>"Corresponding initialization parameter of instance"},
  {:caption=>'Resize ops.', :data=>link_resize_ops,                                                :title=>"Number of resize operations (from gv$SGA_Resize_Ops)", align: :right},
]

%>
<div class="flex-row-element">
  <%= gen_slickgrid(@sums, column_options, {
      :caption => "Summary by pools from gv$SGAStat#{" for instance = #{@instance}" if @instance}",
      :max_height => 450, width: :auto, show_pin_icon: 1
  }) %>
</div>

<%
   def link_name(rec)
     case rec.name
      when 'SQLA' then
        ajax_link(rec.name, {
                              :controller   => :dba_sga,
                              :action       => :list_sql_area_memory,
                              :instance     => rec.inst_id,
                              :update_area  => @update_area
                          },
                     :title => 'Show memory details of SQL area order by amount of sharable memory limited to top 1000 records'
        )
      else
        rec.name
     end
   end

column_options =
[
  {:caption=>"I",     :data=>proc{|rec| rec.inst_id},                                        :title=>"Instance"},
  {:caption=>"Pool",  :data=>proc{|rec| rec.pool},                                           :title=>"Pool within the SGA"},
  {:caption=>"Name",  :data=>proc{|rec| link_name(rec)},                                     :title=>"Name of the component", :data_title=>proc{|rec| "%t: #{sga_name_explanation(rec.name)}"}},
  {:caption=>"Bytes", :data=>proc{|rec| formattedNumber(rec.bytes)},                         :title=>"Size of the component in SGA in bytes", :align=>"right"},
  {:caption=>"MBytes",:data=>proc{|rec| formattedNumber(rec.bytes/(1024*1024).to_f,2)},      :title=>"Size of the component in SGA  in megabytes",    :align=>"right"},
  {:caption=>"GBytes",:data=>proc{|rec| formattedNumber(rec.bytes/(1024*1024*1024).to_f,2)}, :title=>"Size of the component in SGA  in gigabytes",    :align=>"right"},
]

%>
  <div class="flex-row-element">
<%= gen_slickgrid(@components, column_options, {
        :caption => "Details from gv$SGAStat#{" for instance = #{@instance}" if @instance}",
        :max_height => 450, width: :auto, show_pin_icon: 1
}) %>
  </div>

<%
   def link_sharable_mem(rec)
        ajax_link(fn(rec.sharable_mem_mb), {
                              :controller   => :dba_sga,
                              :action       => :list_object_cache_detail,
                              :instance     => rec.inst_id,
                              :type         => rec.type,
                              :namespace    => rec.namespace,
                              :db_link      => rec.db_link,
                              :kept         => rec.kept,
                              :order_by     => 'sharable_mem',
                              :update_area  => @update_area
                          },
                     :title => 'Show details for selection in GV$DB_Object_Cache order by amount of sharable memory limited to top 1000 records'
        )
   end

   def link_distinct(rec)
     ajax_link(fn(rec.count_distinct), {
                           :controller   => :dba_sga,
                           :action       => :list_object_cache_detail,
                           :instance     => rec.inst_id,
                           :type         => rec.type,
                           :namespace    => rec.namespace,
                           :db_link      => rec.db_link,
                           :kept         => rec.kept,
                           :order_by     => 'record_count',
                           :update_area  => @update_area
                       },
                  :title => 'Show details for selection in GV$DB_Object_Cache order by record count limited to top 1000 records'
     )
   end

   column_options =
       [
           {:caption=>'I',                    :data=>proc{|rec| rec.inst_id},                           :title=>'Instance'},
           {:caption=>'Type',                 :data=>proc{|rec| rec.type},                              :title=>'Type of object'},
           {:caption=>'Namespace',            :data=>proc{|rec| rec.namespace},                         :title=>'Library cache namespace of the object'},
           {:caption=>'DB-link',              :data=>proc{|rec| rec.db_link},                           :title=>'Database link name if any'},
           {:caption=>'Kept',                 :data=>proc{|rec| rec.kept},                              :title=>'Are this objects been "kept" (permanently pinned in memory) with the PL/SQL procedure DBMS_SHARED_POOL.KEEP'},
           {:caption=>'Sharable Memory (MB)', :data=>proc{|rec| link_sharable_mem(rec)},                :title=>'Amount of sharable memory consumed in the shared pool', :align=>"right"},
           {:caption=>'Count',                :data=>proc{|rec| fn(rec.counts)},                        :title=>'Number of records in gv$DB_Object_Cache for this selection', :align=>"right"},
           {:caption=>'Count distinct',       :data=>proc{|rec| link_distinct(rec)},                    :title=>'Number of distinct owner, name in gv$DB_Object_Cache for this selection', :align=>"right"},
           {:caption=>'Loads',                :data=>proc{|rec| fn(rec.loads)},                         :title=>'Number of times the objects has been loaded. This count also increases when an object has been invalidated.', :align=>"right"},
           {:caption=>'Locks',                :data=>proc{|rec| fn(rec.locks)},                         :title=>'Number of users currently locking this objects', :align=>"right"},
           {:caption=>'Pins',                 :data=>proc{|rec| fn(rec.pins)},                          :title=>'Number of users currently pinning this objects', :align=>"right"},
           {:caption=>'Invalidations',        :data=>proc{|rec| fn(rec.invalidations)},                 :title=>'Total number of times objects in the namespace were marked invalid because a dependent object was modified', :align=>"right"},
       ]

%>
  <div class="flex-row-element">
<%= gen_slickgrid(@objects, column_options, {
    :caption => "Summary from gv$DB_Object_Cache (objects that are cached in the library cache)#{" for instance = #{@instance}" if @instance}",
    :max_height => 450, width: :auto, show_pin_icon: 1
}) %>
  </div>

</div>

<div id="<%= @update_area %>"></div>







